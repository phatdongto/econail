{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase, { auth } from './firebase';\nexport var getCurrentUser = function getCurrentUser() {\n  return new Promise(function (resolve, reject) {\n    var unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport var googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var facebookProvider = new firebase.auth.FacebookAuthProvider();\nexport var githubProvider = new firebase.auth.GithubAuthProvider();\nexport var twitterProvider = new firebase.auth.TwitterAuthProvider();\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(googleProvider);\n};\nexport var signInWithFacebook = function signInWithFacebook() {\n  return auth.signInWithPopup(facebookProvider).then(function (result) {\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n    var token = result.credential.accessToken; // The signed-in user info.\n\n    var user = result.user;\n    console.log(\"FB Token: \".concat(token), \"User: \".concat(user)); // ...\n  })[\"catch\"](function (error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message; // The email of the user's account used.\n\n    var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    var credential = error.credential;\n    console.error(error); // ...\n  });\n};\nexport var signInWithGithub = function signInWithGithub() {\n  return auth.signInWithPopup(githubProvider);\n};\nexport var signInWithTwitter = function signInWithTwitter() {\n  return auth.signInWithPopup(twitterProvider);\n};\nexport var signInWithEmail = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return auth.signInWithEmailAndPassword(email, password);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function signInWithEmail(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var signUpWithEmailAndPassword = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return auth.createUserWithEmailAndPassword(email, password);\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function signUpWithEmailAndPassword(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var resetPassword = function resetPassword(email) {\n  return auth.sendPasswordResetEmail(email);\n};\nexport var signOut = function signOut() {\n  return auth.signOut();\n};\nexport default auth; // async function signup(provider, info) {\n//   if (!this.isValid) {\n//     return;\n//   }\n//   try {\n//     switch (provider) {\n//       case this.EMAIL:\n//         return await firebaseAuth().createUserWithEmailAndPassword(\n//           info.email,\n//           info.password\n//         );\n//       default:\n//     }\n//   } catch (error) {\n//     return error;\n//   }\n// }\n\nfunction login(_x5, _x6) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(provider, info) {\n    var fbAuthProvider, googleAuthProvider, ghAuthProvider, twitterAuthProvider;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.t0 = provider;\n            _context3.next = _context3.t0 === this.EMAIL ? 4 : _context3.t0 === this.FACEBOOK ? 7 : _context3.t0 === this.GOOGLE ? 11 : _context3.t0 === this.GITHUB ? 15 : _context3.t0 === this.TWITTER ? 19 : 23;\n            break;\n\n          case 4:\n            _context3.next = 6;\n            return firebaseAuth().signInWithEmailAndPassword(info.email, info.password);\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 7:\n            fbAuthProvider = new firebaseAuth.FacebookAuthProvider();\n            _context3.next = 10;\n            return firebaseAuth().signInWithPopup(fbAuthProvider);\n\n          case 10:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 11:\n            googleAuthProvider = new firebaseAuth.GoogleAuthProvider();\n            _context3.next = 14;\n            return firebaseAuth().signInWithPopup(googleAuthProvider);\n\n          case 14:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 15:\n            ghAuthProvider = new firebaseAuth.GithubAuthProvider();\n            _context3.next = 18;\n            return firebaseAuth().signInWithPopup(ghAuthProvider);\n\n          case 18:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 19:\n            twitterAuthProvider = new firebaseAuth.TwitterAuthProvider();\n            _context3.next = 22;\n            return firebaseAuth().signInWithPopup(twitterAuthProvider);\n\n          case 22:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 23:\n            _context3.next = 28;\n            break;\n\n          case 25:\n            _context3.prev = 25;\n            _context3.t1 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", _context3.t1);\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this, [[0, 25]]);\n  }));\n  return _login.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/snowd/Desktop/isoadmin-330/admin/isomorphic/node_modules/@iso/lib/firebase/firebase.authentication.util.js"],"names":["firebase","auth","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged","userAuth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","facebookProvider","FacebookAuthProvider","githubProvider","GithubAuthProvider","twitterProvider","TwitterAuthProvider","signInWithGoogle","signInWithPopup","signInWithFacebook","then","result","token","credential","accessToken","user","console","log","error","errorCode","code","errorMessage","message","email","signInWithGithub","signInWithTwitter","signInWithEmail","password","signInWithEmailAndPassword","signUpWithEmailAndPassword","createUserWithEmailAndPassword","resetPassword","sendPasswordResetEmail","signOut","login","provider","info","EMAIL","FACEBOOK","GOOGLE","GITHUB","TWITTER","firebaseAuth","fbAuthProvider","googleAuthProvider","ghAuthProvider","twitterAuthProvider"],"mappings":"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","sourcesContent":["import firebase, { auth } from './firebase';\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const facebookProvider = new firebase.auth.FacebookAuthProvider();\nexport const githubProvider = new firebase.auth.GithubAuthProvider();\nexport const twitterProvider = new firebase.auth.TwitterAuthProvider();\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport const signInWithFacebook = () =>\n  auth\n    .signInWithPopup(facebookProvider)\n    .then(function(result) {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      console.log(`FB Token: ${token}`, `User: ${user}`);\n\n      // ...\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      console.error(error);\n\n      // ...\n    });\nexport const signInWithGithub = () => auth.signInWithPopup(githubProvider);\nexport const signInWithTwitter = () => auth.signInWithPopup(twitterProvider);\nexport const signInWithEmail = async (email, password) =>\n  await auth.signInWithEmailAndPassword(email, password);\nexport const signUpWithEmailAndPassword = async (email, password) =>\n  await auth.createUserWithEmailAndPassword(email, password);\n\nexport const resetPassword = email => auth.sendPasswordResetEmail(email);\n\nexport const signOut = () => auth.signOut();\nexport default auth;\n// async function signup(provider, info) {\n//   if (!this.isValid) {\n//     return;\n//   }\n//   try {\n//     switch (provider) {\n//       case this.EMAIL:\n//         return await firebaseAuth().createUserWithEmailAndPassword(\n//           info.email,\n//           info.password\n//         );\n//       default:\n//     }\n//   } catch (error) {\n//     return error;\n//   }\n// }\n\nasync function login(provider, info) {\n  try {\n    switch (provider) {\n      case this.EMAIL:\n        return await firebaseAuth().signInWithEmailAndPassword(\n          info.email,\n          info.password\n        );\n      case this.FACEBOOK:\n        let fbAuthProvider = new firebaseAuth.FacebookAuthProvider();\n        return await firebaseAuth().signInWithPopup(fbAuthProvider);\n      case this.GOOGLE:\n        let googleAuthProvider = new firebaseAuth.GoogleAuthProvider();\n        return await firebaseAuth().signInWithPopup(googleAuthProvider);\n      case this.GITHUB:\n        let ghAuthProvider = new firebaseAuth.GithubAuthProvider();\n        return await firebaseAuth().signInWithPopup(ghAuthProvider);\n      case this.TWITTER:\n        let twitterAuthProvider = new firebaseAuth.TwitterAuthProvider();\n        return await firebaseAuth().signInWithPopup(twitterAuthProvider);\n      default:\n    }\n  } catch (error) {\n    return error;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}