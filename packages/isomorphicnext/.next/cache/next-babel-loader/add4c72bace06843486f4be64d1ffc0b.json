{"ast":null,"code":"var actions = {\n  GIT_SEARCH: 'GIT_SEARCH',\n  GIT_SUCCESS_RESULT: 'GIT_SUCCESS_RESULT',\n  GIT_ERROR_RESULT: 'GIT_ERROR_RESULT',\n  gitSearch: function gitSearch(searcText) {\n    return {\n      type: actions.GIT_SEARCH,\n      payload: {\n        searcText: searcText,\n        page: 1\n      }\n    };\n  },\n  onPageChange: function onPageChange(searcText, page) {\n    return {\n      type: actions.GIT_SEARCH,\n      payload: {\n        searcText: searcText,\n        page: page\n      }\n    };\n  },\n  gitSearchSuccess: function gitSearchSuccess(result, total_count, page) {\n    return {\n      type: actions.GIT_SUCCESS_RESULT,\n      result: result,\n      total_count: total_count,\n      page: page\n    };\n  },\n  gitSearchError: function gitSearchError() {\n    return {\n      type: actions.GIT_ERROR_RESULT\n    };\n  }\n};\nexport default actions;","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/@iso/redux/githubSearch/actions.js"],"names":["actions","GIT_SEARCH","GIT_SUCCESS_RESULT","GIT_ERROR_RESULT","gitSearch","searcText","type","payload","page","onPageChange","gitSearchSuccess","result","total_count","gitSearchError"],"mappings":"AAAA,IAAMA,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,YADE;AAEdC,EAAAA,kBAAkB,EAAE,oBAFN;AAGdC,EAAAA,gBAAgB,EAAE,kBAHJ;AAIdC,EAAAA,SAAS,EAAE,mBAAAC,SAAS;AAAA,WAAK;AACvBC,MAAAA,IAAI,EAAEN,OAAO,CAACC,UADS;AAEvBM,MAAAA,OAAO,EAAE;AAAEF,QAAAA,SAAS,EAATA,SAAF;AAAaG,QAAAA,IAAI,EAAE;AAAnB;AAFc,KAAL;AAAA,GAJN;AAQdC,EAAAA,YAAY,EAAE,sBAACJ,SAAD,EAAYG,IAAZ;AAAA,WAAsB;AAClCF,MAAAA,IAAI,EAAEN,OAAO,CAACC,UADoB;AAElCM,MAAAA,OAAO,EAAE;AAAEF,QAAAA,SAAS,EAATA,SAAF;AAAaG,QAAAA,IAAI,EAAJA;AAAb;AAFyB,KAAtB;AAAA,GARA;AAYdE,EAAAA,gBAAgB,EAAE,0BAACC,MAAD,EAASC,WAAT,EAAsBJ,IAAtB;AAAA,WAAgC;AAChDF,MAAAA,IAAI,EAAEN,OAAO,CAACE,kBADkC;AAEhDS,MAAAA,MAAM,EAANA,MAFgD;AAGhDC,MAAAA,WAAW,EAAXA,WAHgD;AAIhDJ,MAAAA,IAAI,EAAJA;AAJgD,KAAhC;AAAA,GAZJ;AAkBdK,EAAAA,cAAc,EAAE;AAAA,WAAO;AACrBP,MAAAA,IAAI,EAAEN,OAAO,CAACG;AADO,KAAP;AAAA;AAlBF,CAAhB;AAsBA,eAAeH,OAAf","sourcesContent":["const actions = {\r\n  GIT_SEARCH: 'GIT_SEARCH',\r\n  GIT_SUCCESS_RESULT: 'GIT_SUCCESS_RESULT',\r\n  GIT_ERROR_RESULT: 'GIT_ERROR_RESULT',\r\n  gitSearch: searcText => ({\r\n    type: actions.GIT_SEARCH,\r\n    payload: { searcText, page: 1 },\r\n  }),\r\n  onPageChange: (searcText, page) => ({\r\n    type: actions.GIT_SEARCH,\r\n    payload: { searcText, page },\r\n  }),\r\n  gitSearchSuccess: (result, total_count, page) => ({\r\n    type: actions.GIT_SUCCESS_RESULT,\r\n    result,\r\n    total_count,\r\n    page,\r\n  }),\r\n  gitSearchError: () => ({\r\n    type: actions.GIT_ERROR_RESULT,\r\n  }),\r\n};\r\nexport default actions;\r\n"]},"metadata":{},"sourceType":"module"}