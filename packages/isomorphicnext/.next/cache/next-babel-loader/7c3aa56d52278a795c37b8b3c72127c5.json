{"ast":null,"code":"import \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"D:\\\\Team6-FE\\\\isomorphic\\\\node_modules\\\\@iso\\\\components\\\\Tables\\\\EditableCell.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Input from '../uielements/input';\nexport default function (props) {\n  const [state, setState] = React.useState({\n    value: props.value,\n    editable: false\n  });\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      value\n    }));\n  };\n\n  const check = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      editable: false\n    }));\n\n    if (props.onChange) {\n      props.onChange(state.value, props.columnsKey, props.index);\n    }\n  };\n\n  const edit = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      editable: true\n    }));\n  };\n\n  const {\n    value,\n    editable\n  } = state;\n  return __jsx(\"div\", {\n    className: \"isoEditData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, editable ? __jsx(\"div\", {\n    className: \"isoEditDataWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    value: value,\n    onChange: handleChange,\n    onPressEnter: check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), __jsx(_Icon, {\n    type: \"check\",\n    className: \"isoEditIcon\",\n    onClick: check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })) : __jsx(\"p\", {\n    className: \"isoDataWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, value || ' ', __jsx(_Icon, {\n    type: \"edit\",\n    className: \"isoEditIcon\",\n    onClick: edit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/@iso/components/Tables/EditableCell.js"],"names":["React","Input","props","state","setState","useState","value","editable","handleChange","event","target","check","onChange","columnsKey","index","edit"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAGA,eAAe,UAASC,KAAT,EAAgB;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe;AACvCC,IAAAA,KAAK,EAAEJ,KAAK,CAACI,KAD0B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAf,CAA1B;;AAIA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAMH,KAAK,GAAGG,KAAK,CAACC,MAAN,CAAaJ,KAA3B;AACAF,IAAAA,QAAQ,iCAAMD,KAAN;AAAaG,MAAAA;AAAb,OAAR;AACD,GAHD;;AAIA,QAAMK,KAAK,GAAG,MAAM;AAClBP,IAAAA,QAAQ,iCAAMD,KAAN;AAAaI,MAAAA,QAAQ,EAAE;AAAvB,OAAR;;AACA,QAAIL,KAAK,CAACU,QAAV,EAAoB;AAClBV,MAAAA,KAAK,CAACU,QAAN,CAAeT,KAAK,CAACG,KAArB,EAA4BJ,KAAK,CAACW,UAAlC,EAA8CX,KAAK,CAACY,KAApD;AACD;AACF,GALD;;AAMA,QAAMC,IAAI,GAAG,MAAM;AACjBX,IAAAA,QAAQ,iCAAMD,KAAN;AAAaI,MAAAA,QAAQ,EAAE;AAAvB,OAAR;AACD,GAFD;;AAGA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBJ,KAA5B;AACA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,QAAQ,GACP;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAqB,IAAA,QAAQ,EAAEE,YAA/B;AAA6C,IAAA,YAAY,EAAEG,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAA2C,IAAA,OAAO,EAAEA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADO,GAMP;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,IAAI,GADZ,EAEE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,aAA5B;AAA0C,IAAA,OAAO,EAAES,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPJ,CADF;AAeD","sourcesContent":["import React from 'react';\r\nimport Input from '../uielements/input';\r\nimport { Icon } from 'antd';\r\n\r\nexport default function(props) {\r\n  const [state, setState] = React.useState({\r\n    value: props.value,\r\n    editable: false,\r\n  });\r\n  const handleChange = event => {\r\n    const value = event.target.value;\r\n    setState({ ...state, value });\r\n  };\r\n  const check = () => {\r\n    setState({ ...state, editable: false });\r\n    if (props.onChange) {\r\n      props.onChange(state.value, props.columnsKey, props.index);\r\n    }\r\n  };\r\n  const edit = () => {\r\n    setState({ ...state, editable: true });\r\n  };\r\n  const { value, editable } = state;\r\n  return (\r\n    <div className=\"isoEditData\">\r\n      {editable ? (\r\n        <div className=\"isoEditDataWrapper\">\r\n          <Input value={value} onChange={handleChange} onPressEnter={check} />\r\n          <Icon type=\"check\" className=\"isoEditIcon\" onClick={check} />\r\n        </div>\r\n      ) : (\r\n        <p className=\"isoDataWrapper\">\r\n          {value || ' '}\r\n          <Icon type=\"edit\" className=\"isoEditIcon\" onClick={edit} />\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}