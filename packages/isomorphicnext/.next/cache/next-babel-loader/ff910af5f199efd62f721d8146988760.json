{"ast":null,"code":"import qs from 'qs';\nimport options from './options';\nimport { isServer } from './isServer';\nexport function getInitData() {\n  if (!isServer) {\n    const initData = qs.parse(window.location.search.slice(1));\n    if (initData.toggle) initData.toggle.free_shipping = initData.toggle.free_shipping === 'true' ? true : undefined;\n    return initData;\n  }\n\n  return false;\n}\nexport function setUrl(searchState) {\n  if (!isServer) {\n    const search = searchState ? `${window.location.pathname}?${qs.stringify(searchState)}` : '';\n    window.history.pushState(searchState, null, search);\n  }\n\n  return;\n}\nexport function getDefaultPath() {\n  const getParent = lastRoute => {\n    const parent = [];\n    if (!lastRoute) return parent;\n    parent.push(lastRoute);\n    options.forEach(option => {\n      if (option.children) {\n        option.children.forEach(child => {\n          if (child.key === lastRoute) {\n            parent.push(option.key);\n          }\n        });\n      }\n    });\n    return parent;\n  };\n\n  if (!isServer && window.location.pathname) {\n    const routes = window.location.pathname.split('/');\n\n    if (routes.length > 1) {\n      const lastRoute = routes[routes.length - 1];\n      return getParent(lastRoute);\n    }\n  }\n\n  return [];\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/@iso/lib/helpers/url_sync.js"],"names":["qs","options","isServer","getInitData","initData","parse","window","location","search","slice","toggle","free_shipping","undefined","setUrl","searchState","pathname","stringify","history","pushState","getDefaultPath","getParent","lastRoute","parent","push","forEach","option","children","child","key","routes","split","length"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC5B,MAAI,CAACD,QAAL,EAAe;AACb,UAAME,QAAQ,GAAGJ,EAAE,CAACK,KAAH,CAASC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,KAAvB,CAA6B,CAA7B,CAAT,CAAjB;AACA,QAAIL,QAAQ,CAACM,MAAb,EACEN,QAAQ,CAACM,MAAT,CAAgBC,aAAhB,GACEP,QAAQ,CAACM,MAAT,CAAgBC,aAAhB,KAAkC,MAAlC,GAA2C,IAA3C,GAAkDC,SADpD;AAEF,WAAOR,QAAP;AACD;;AACD,SAAO,KAAP;AACD;AACD,OAAO,SAASS,MAAT,CAAgBC,WAAhB,EAA6B;AAClC,MAAI,CAACZ,QAAL,EAAe;AACb,UAAMM,MAAM,GAAGM,WAAW,GACrB,GAAER,MAAM,CAACC,QAAP,CAAgBQ,QAAS,IAAGf,EAAE,CAACgB,SAAH,CAAaF,WAAb,CAA0B,EADnC,GAEtB,EAFJ;AAGAR,IAAAA,MAAM,CAACW,OAAP,CAAeC,SAAf,CAAyBJ,WAAzB,EAAsC,IAAtC,EAA4CN,MAA5C;AACD;;AACD;AACD;AAED,OAAO,SAASW,cAAT,GAA0B;AAC/B,QAAMC,SAAS,GAAGC,SAAS,IAAI;AAC7B,UAAMC,MAAM,GAAG,EAAf;AACA,QAAI,CAACD,SAAL,EAAgB,OAAOC,MAAP;AAChBA,IAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ;AACApB,IAAAA,OAAO,CAACuB,OAAR,CAAgBC,MAAM,IAAI;AACxB,UAAIA,MAAM,CAACC,QAAX,EAAqB;AACnBD,QAAAA,MAAM,CAACC,QAAP,CAAgBF,OAAhB,CAAwBG,KAAK,IAAI;AAC/B,cAAIA,KAAK,CAACC,GAAN,KAAcP,SAAlB,EAA6B;AAC3BC,YAAAA,MAAM,CAACC,IAAP,CAAYE,MAAM,CAACG,GAAnB;AACD;AACF,SAJD;AAKD;AACF,KARD;AASA,WAAON,MAAP;AACD,GAdD;;AAeA,MAAI,CAACpB,QAAD,IAAaI,MAAM,CAACC,QAAP,CAAgBQ,QAAjC,EAA2C;AACzC,UAAMc,MAAM,GAAGvB,MAAM,CAACC,QAAP,CAAgBQ,QAAhB,CAAyBe,KAAzB,CAA+B,GAA/B,CAAf;;AACA,QAAID,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACrB,YAAMV,SAAS,GAAGQ,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAAxB;AACA,aAAOX,SAAS,CAACC,SAAD,CAAhB;AACD;AACF;;AACD,SAAO,EAAP;AACD","sourcesContent":["import qs from 'qs';\r\nimport options from './options';\r\nimport { isServer } from './isServer';\r\n\r\nexport function getInitData() {\r\n  if (!isServer) {\r\n    const initData = qs.parse(window.location.search.slice(1));\r\n    if (initData.toggle)\r\n      initData.toggle.free_shipping =\r\n        initData.toggle.free_shipping === 'true' ? true : undefined;\r\n    return initData;\r\n  }\r\n  return false;\r\n}\r\nexport function setUrl(searchState) {\r\n  if (!isServer) {\r\n    const search = searchState\r\n      ? `${window.location.pathname}?${qs.stringify(searchState)}`\r\n      : '';\r\n    window.history.pushState(searchState, null, search);\r\n  }\r\n  return;\r\n}\r\n\r\nexport function getDefaultPath() {\r\n  const getParent = lastRoute => {\r\n    const parent = [];\r\n    if (!lastRoute) return parent;\r\n    parent.push(lastRoute);\r\n    options.forEach(option => {\r\n      if (option.children) {\r\n        option.children.forEach(child => {\r\n          if (child.key === lastRoute) {\r\n            parent.push(option.key);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return parent;\r\n  };\r\n  if (!isServer && window.location.pathname) {\r\n    const routes = window.location.pathname.split('/');\r\n    if (routes.length > 1) {\r\n      const lastRoute = routes[routes.length - 1];\r\n      return getParent(lastRoute);\r\n    }\r\n  }\r\n  return [];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}