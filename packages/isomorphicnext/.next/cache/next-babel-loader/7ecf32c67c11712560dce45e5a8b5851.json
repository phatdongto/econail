{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport config, { getCurrentLanguage } from './config';\nimport actions from './actions';\nvar initState = {\n  isActivated: false,\n  language: getCurrentLanguage(config.defaultLanguage || 'english')\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.ACTIVATE_LANG_MODAL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isActivated: !state.isActivated\n      });\n\n    case actions.CHANGE_LANGUAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        language: action.language\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Team6-FE/isomorphic/node_modules/@iso/redux/languageSwitcher/reducer.js"],"names":["config","getCurrentLanguage","actions","initState","isActivated","language","defaultLanguage","state","action","type","ACTIVATE_LANG_MODAL","CHANGE_LANGUAGE"],"mappings":";;;;;;AAAA,OAAOA,MAAP,IAAiBC,kBAAjB,QAA2C,UAA3C;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,KADG;AAEhBC,EAAAA,QAAQ,EAAEJ,kBAAkB,CAACD,MAAM,CAACM,eAAP,IAA0B,SAA3B;AAFZ,CAAlB;AAKA,eAAe,YAAoC;AAAA,MAA3BC,KAA2B,uEAAnBJ,SAAmB;AAAA,MAARK,MAAQ;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACQ,mBAAb;AACE,6CACKH,KADL;AAEEH,QAAAA,WAAW,EAAE,CAACG,KAAK,CAACH;AAFtB;;AAIF,SAAKF,OAAO,CAACS,eAAb;AACE,6CACKJ,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AAFnB;;AAIF;AACE,aAAOE,KAAP;AAZJ;AAcD","sourcesContent":["import config, { getCurrentLanguage } from './config';\r\n\r\nimport actions from './actions';\r\n\r\nconst initState = {\r\n  isActivated: false,\r\n  language: getCurrentLanguage(config.defaultLanguage || 'english'),\r\n};\r\n\r\nexport default function(state = initState, action) {\r\n  switch (action.type) {\r\n    case actions.ACTIVATE_LANG_MODAL:\r\n      return {\r\n        ...state,\r\n        isActivated: !state.isActivated,\r\n      };\r\n    case actions.CHANGE_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        language: action.language,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}